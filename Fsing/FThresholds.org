#+TITLE: F-Thresholds Package

* Master file: [[file:./FThresholdsPackage/FThresholds.m2][FThresholds.m2]]
* Basic functions: [[file:./FThresholdsPackage/FThresholds/BasicFunctions.m2][BasicFunctions.m2]] [3/5]
:PROPERTIES:
:COOKIE_DATA: todo recursive
:END:
** Tests: [[file:./FThresholdsPackage/FThresholds/BasicFunctionsTest.m2][BasicFunctionsTest.m2]] [0/1]
*** TODO Start tests file
** Functions
*** denominator
*** numerator
*** fracPart
*** nontrivialPowerSet
*** numberToPrimeFactorList
*** properFactors (was getFactorList)
*** findNumberBetweenWithDenom
*** findNumberBetween
*** carryTest
*** firstCarry
*** getCanVector
*** getNumAndDenom
*** taxicabNorm
*** selectNonzero
*** selectPositive
*** nonzeroPositions
*** zeroPositions
*** isPolynomial
*** isPolynomialOverPosCharField
*** isPolynomislOverFiniteField
*** isDiagonal
*** isMonomial
*** isBinomial
*** isBinaryForm
*** isNonCostantBinaryForm
*** isLinearBinaryForm
*** xInt
*** maxIdeal
*** factorsAndMultiplicities (was factorList) [1/1] 
**** DONE Move to BasicFunctions
     CLOSED: [2018-08-13 Mon 11:40]
*** splittingField [1/2]
**** TODO Determine to what class of polynomials this applies
**** DONE Move to BasicFunctions
     CLOSED: [2018-08-13 Mon 11:40]
*** checkOptions [1/1]
**** DONE Include tests with functions that return boolean values.
     CLOSED: [2018-08-16 Thu 08:58]
* Main functions: [[file:./FThresholdsPackage/FThresholds/MainFunctions.m2][MainFunctions.m2]] [2/6]
:PROPERTIES:
:COOKIE_DATA: todo recursive
:END:
** Documentation: [[file:./FThresholdsPackage/FThresholds/MainFunctionsDoc.m2][MainFunctionsDoc.m2]] 
** Tests: [[file:./FThresholdsPackage/FThresholds/MainFunctionsTest.m2][MainFunctionsTest.m2]]
** Functions [7/11]
:PROPERTIES:
:COOKIE_DATA: todo recursive
:END:
*** nu1
*** testRoot
*** testPower
*** testFrobeniusPower
*** binarySearch
*** binarySearchRecursive
*** linearSearch
*** nuInternal
*** nu
*** fptApproximation
*** ftApproximation
*** criticalExponentApproximation
*** guessFPT [0/1]
**** TODO Incorporate in fpt
*** fSig
*** isFRegularPoly
*** fpt [4/5]
**** DONE fpt needs a version with a single argument, for cases when the special algorithms are used.
    CLOSED: [2018-08-14 Tue 17:31]
    Now second argument was replaced with the option DepthOfSearch
**** DONE Alternatively, the exponent e could be an option value (if you pass this option, fpt will try the nu computations and everything after; if not, then it won't).
     CLOSED: [2018-08-16 Thu 09:05]
**** DONE Maybe DiagonalCheck, BinomialCheck, etc, is too much, and we could have only one option, say "UseSpecialAlgorithms" (default True). If set to false, it will go straight to the nu computation.
     CLOSED: [2018-08-16 Thu 09:04]
**** DONE Check if SeachDepth is positive
     CLOSED: [2018-08-16 Thu 09:00]
**** TODO binaryFormFPT has a template that doesn't fit the fpt function; add that template 
*** isFPT [2/3]
**** DONE Change name so it doesn't refer to type of argument
     CLOSED: [2018-08-13 Mon 11:24]
**** TODO Rewrite, so as not to assume a polynomial ring
**** DONE Origin does not seem to do anything (KILLED)
     CLOSED: [2018-08-13 Mon 13:01]

*** isFJumpingExponent [1/2]
**** DONE Change name so it doesn't refer to type of argument
     CLOSED: [2018-08-13 Mon 11:25]
**** TODO Rewrite, so as not to assume a polynomial ring
*** sigma (was sigmaAOverPEMinus1Poly)  
* Special FT functions: [[file:./FThresholdsPackage/FThresholds/SpecialFThresholds.m2][SpecialFThresholds.m2]] [0/0]
:PROPERTIES:
:COOKIE_DATA: todo recursive
:END:
** Tests: [[file:./FThresholdsPackage/FThresholds/SpecialFThresholdsTest.m2][SpecialFThresholdsTest.m2]] 
** Functions [1/4]
:PROPERTIES:
:COOKIE_DATA: todo recursive
:END:
*** diagonalFPT
*** factorOurMonomial
*** monomialFactor
*** twoIntersection
*** allIntersections
*** isInPolytope
*** isInInteriorPolytope
*** polytopeDefiningPoints
*** maxCoordinateSum
*** dCalculation
*** calculateEpsilon
*** binomialFPT
*** setFTData
*** isInUpperRegion
*** isInLowerRegion
*** neighborInUpperRegion
*** isCP
*** findCPBelow
*** binaryFormFPTInternal
*** binaryFormFPT [1/4]
**** TODO Check for proper way to define ring
**** TODO Replace PrintCP with a Verbose option
**** TODO Get rid of MaxExp
**** DONE Replace Nontrivial with "Nontrivial"
     CLOSED: [2018-08-16 Thu 09:06]
* General TODOs, notes, questions, etc. [3/4]

** TODO Add output type to every method function 
    (e.g.,  divisor (BasicList, BasicList) := BasicDiv => o -> (l1, l2) -> ) 
** DONE Should a function reject non-valid options? If so, how? (This is now done with the function checkOptions)
   CLOSED: [2018-08-14 Tue 10:14]
** DONE Add checkOptions wherever appropriate
   CLOSED: [2018-08-14 Tue 17:30]
